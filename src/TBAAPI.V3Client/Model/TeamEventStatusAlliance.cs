/* 
 * The Blue Alliance API v3
 *
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).    A `User-Agent` header may need to be set to prevent a 403 Unauthorized error.
 *
 * The version of the OpenAPI document: 3.8.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

namespace TBAAPI.V3Client.Model;

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text;
using System.Text.Json;
using System.Text.Json.Serialization;
/// <summary>
/// TeamEventStatusAlliance
/// </summary>
[DataContract]
public partial class TeamEventStatusAlliance : IEquatable<TeamEventStatusAlliance>, IValidatableObject
{
    /// <summary>
    /// Initializes a new instance of the <see cref="TeamEventStatusAlliance" /> class.
    /// </summary>
    [JsonConstructor]
    protected TeamEventStatusAlliance() { }
    /// <summary>
    /// Initializes a new instance of the <see cref="TeamEventStatusAlliance" /> class.
    /// </summary>
    /// <param name="name">Alliance name, may be null..</param>
    /// <param name="number">Alliance number. (required).</param>
    /// <param name="backup">backup.</param>
    /// <param name="pick">Order the team was picked in the alliance from 0-2, with 0 being alliance captain. (required).</param>
    public TeamEventStatusAlliance(string name = default, int number = default, TeamEventStatusAllianceBackup backup = default, int pick = default)
    {
        this.Number = number;
        this.Pick = pick;
        this.Name = name;
        this.Backup = backup;
    }

    /// <summary>
    /// Alliance name, may be null.
    /// </summary>
    /// <value>Alliance name, may be null.</value>
    [DataMember(Name = "name", EmitDefaultValue = false), JsonPropertyName("name")]
    public string Name { get; set; }

    /// <summary>
    /// Alliance number.
    /// </summary>
    /// <value>Alliance number.</value>
    [DataMember(Name = "number", EmitDefaultValue = false), JsonPropertyName("number")]
    public int Number { get; set; }

    /// <summary>
    /// Gets or Sets Backup
    /// </summary>
    [DataMember(Name = "backup", EmitDefaultValue = false), JsonPropertyName("backup")]
    public TeamEventStatusAllianceBackup Backup { get; set; }

    /// <summary>
    /// Order the team was picked in the alliance from 0-2, with 0 being alliance captain.
    /// </summary>
    /// <value>Order the team was picked in the alliance from 0-2, with 0 being alliance captain.</value>
    [DataMember(Name = "pick", EmitDefaultValue = false), JsonPropertyName("pick")]
    public int Pick { get; set; }

    /// <summary>
    /// Returns the string presentation of the object
    /// </summary>
    /// <returns>String presentation of the object</returns>
    public override string ToString()
    {
        var sb = new StringBuilder();
        sb.Append("class TeamEventStatusAlliance {\n");
        sb.Append("  Name: ").Append(this.Name).Append('\n');
        sb.Append("  Number: ").Append(this.Number).Append('\n');
        sb.Append("  Backup: ").Append(this.Backup).Append('\n');
        sb.Append("  Pick: ").Append(this.Pick).Append('\n');
        sb.Append("}\n");
        return sb.ToString();
    }

    /// <summary>
    /// Returns the JSON string presentation of the object
    /// </summary>
    /// <returns>JSON string presentation of the object</returns>
    public virtual string ToJson() => JsonSerializer.Serialize(this, GetType());

    /// <summary>
    /// Returns true if objects are equal
    /// </summary>
    /// <param name="input">Object to be compared</param>
    /// <returns>Boolean</returns>
    public override bool Equals(object input) => Equals(input as TeamEventStatusAlliance);

    /// <summary>
    /// Returns true if TeamEventStatusAlliance instances are equal
    /// </summary>
    /// <param name="input">Instance of TeamEventStatusAlliance to be compared</param>
    /// <returns>Boolean</returns>
    public bool Equals(TeamEventStatusAlliance input)
    {
        return input != null
&& (
                this.Name == input.Name ||
                (this.Name != null &&
                this.Name.Equals(input.Name))
            ) &&
            (
                this.Number == input.Number ||
                this.Number.Equals(input.Number)
            ) &&
            (
                this.Backup == input.Backup ||
                (this.Backup != null &&
                this.Backup.Equals(input.Backup))
            ) &&
            (
                this.Pick == input.Pick ||
                this.Pick.Equals(input.Pick)
            );
    }

    /// <summary>
    /// Gets the hash code
    /// </summary>
    /// <returns>Hash code</returns>
    public override int GetHashCode()
    {
        unchecked // Overflow is fine, just wrap
        {
            var hashCode = 41;
            if (this.Name != null)
            {
                hashCode = (hashCode * 59) + this.Name.GetHashCode();
            }

            hashCode = (hashCode * 59) + this.Number.GetHashCode();
            if (this.Backup != null)
            {
                hashCode = (hashCode * 59) + this.Backup.GetHashCode();
            }

            hashCode = (hashCode * 59) + this.Pick.GetHashCode();
            return hashCode;
        }
    }

    /// <summary>
    /// To validate all properties of the instance
    /// </summary>
    /// <param name="validationContext">Validation context</param>
    /// <returns>Validation Result</returns>
    IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
    {
        yield break;
    }
}
